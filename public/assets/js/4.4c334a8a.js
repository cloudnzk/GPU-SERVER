(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{428:function(s,t,a){s.exports=a.p+"assets/img/gpu-driver-install.c6025237.png"},429:function(s,t,a){s.exports=a.p+"assets/img/gpu-info.7907d85b.png"},430:function(s,t,a){s.exports=a.p+"assets/img/lxd-init.b5e014c6.png"},431:function(s,t,a){s.exports=a.p+"assets/img/lxd-default.0c5172f4.png"},448:function(s,t,a){"use strict";a.r(t);var e=a(35),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"gpu服务器搭建过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gpu服务器搭建过程"}},[s._v("#")]),s._v(" GPU服务器搭建过程")]),s._v(" "),e("h2",{attrs:{id:"更新系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新系统"}},[s._v("#")]),s._v(" 更新系统")]),s._v(" "),e("p",[s._v("因为 "),e("code",[s._v("Ubuntu 16.04")]),s._v(" 安装的 "),e("code",[s._v("LXD")]),s._v(" 版本太低(2.0)，添加不了 GPU，同时为了以后考虑，将系统更新到了 20.04 版本。为什么不更新到最新的 22.04 呢，因为 22.04 刚出不久，还是 20.04 比较稳定。")]),s._v(" "),e("p",[s._v("由于 Ubuntu 更新只能向上更新一级，即现在的 16.04 升级到 18.04，这里采用了重装系统的方式，直接一步到位升级到了 20.04。如果后续需要更新系统，直接用命令更新即可。更新系统前建议备份重要的数据，以防丢失。")]),s._v(" "),e("h2",{attrs:{id:"显卡驱动安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#显卡驱动安装"}},[s._v("#")]),s._v(" 显卡驱动安装")]),s._v(" "),e("p",[s._v("直接安装"),e("code",[s._v("软件与更新")]),s._v("里面的显卡驱动即可，简单方便。注意：不要安装以 server 结尾的那些。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(428),alt:""}})]),s._v(" "),e("p",[s._v("然后使用 "),e("code",[s._v("nvidia-smi")]),s._v(" 命令,查看是否安装成功。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(429),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"lxd安装与配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lxd安装与配置"}},[s._v("#")]),s._v(" LXD安装与配置")]),s._v(" "),e("blockquote",[e("p",[s._v("搭建方案：https://github.com/shenuiuin/LXD_GPU_SERVER")])]),s._v(" "),e("ol",[e("li",[e("p",[s._v("安装LXD")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" lxd zfsutils-linux bridge-utils\n")])])])]),s._v(" "),e("li",[e("p",[s._v("配置ZFS")]),s._v(" "),e("p",[s._v("由于硬盘空间已经全部分好区，因此我们先利用 "),e("code",[s._v("Gparted")]),s._v(" 从机械硬盘的 "),e("code",[s._v("/dev/sdb1")]),s._v(" 分区上划出了 1T 空间用作容器的存储卷，分区号为 "),e("code",[s._v("/dev/sdb2")]),s._v("。")]),s._v(" "),e("p",[s._v("然后，在这个空白分区上创建一个 "),e("code",[s._v("ZFS")]),s._v(" 存储池:")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" lxc storage create zfs-pool zfs "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("source")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/sdb2\n")])])])]),s._v(" "),e("li",[e("p",[s._v("LXD初始化")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" lxd init\n")])])]),e("p",[e("img",{attrs:{src:a(430),alt:""}})])]),s._v(" "),e("li",[e("p",[s._v("配置容器默认参数")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" lxc profile edit default\n")])])]),e("p",[s._v("设置默认参数后，新创建的容器都会继承默认参数。我们可以在此限制 CPU、内存、硬盘等资源：")]),s._v(" "),e("img",{staticStyle:{zoom:"67%"},attrs:{src:a(431)}}),s._v(" "),e("h2",{attrs:{id:"创建容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建容器"}},[s._v("#")]),s._v(" 创建容器")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("利用清华源镜像创建容器")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" lxc remote "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" tuna-images https://mirrors.tuna.tsinghua.edu.cn/lxc-images/ --protocol"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("simplestreams --public\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" lxc launch tuna-images:ubuntu/20.04 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("进入容器并修改密码")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" lxc "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" root\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" ubuntu\n")])])]),e("p",[s._v("容器内默认存在一个名为 "),e("code",[s._v("ubuntu")]),s._v(" 的用户")])]),s._v(" "),e("li",[e("p",[s._v("安装 "),e("code",[s._v("ssh")]),s._v(" 服务")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("退出容器回到宿主机")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("配置端口转发")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" lxc config device "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" proxy0 proxy "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("listen")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tcp:10.50.128.65:60601 "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("connect")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tcp:10.251.10.227:22 "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bind")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("host\n")])])]),e("p",[s._v("其中"),e("code",[s._v("10.50.128.65")]),s._v(" 是宿主机的固定IP，并通过宿主机的端口号 "),e("code",[s._v("60601")]),s._v(" 监听容器的 SSH 默认端口 "),e("code",[s._v("22")]),s._v(" 。"),e("code",[s._v("10.251.10.227")]),s._v(" 是容器的内部IP 地址，可通过 "),e("code",[s._v("sudo lxc list")]),s._v(" 查看。")])])]),s._v(" "),e("h2",{attrs:{id:"容器配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器配置"}},[s._v("#")]),s._v(" 容器配置")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("连接容器")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" ubuntu@10.50.128.65 -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("60601")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("更换软件安装源")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/apt/sources.list\n")])])]),e("p",[s._v("添加网易源（仅对 20.04 系统有效）：")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("deb http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse\n")])])])]),s._v(" "),e("li",[e("p",[s._v("为容器分配显卡")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("lxc config device "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" gpu0 gpu "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("pci")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("0000:18:00.0\n")])])]),e("p",[s._v("起初通过显卡ID来进行分配，但分配到了所有的显卡。而通过显卡的 PCI-ID 区分，则可达到分配的目的。每张显卡的 PCI-ID 可通过 "),e("code",[s._v("nvidia-smi")]),s._v(" 命令查看。")])]),s._v(" "),e("li",[e("p",[s._v("安装显卡驱动")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://cn.download.nvidia.com/XFree86/Linux-x86_64/470.129.06/NVIDIA-Linux-x86_64-470.129.06.run\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 无需安装到内核")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" ./NVIDIA-Linux-x86_64-470.129.06.run --no-kernel-module\n")])])])])]),s._v(" "),e("h2",{attrs:{id:"容器模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器模板"}},[s._v("#")]),s._v(" 容器模板")]),s._v(" "),e("p",[s._v("将之前做好的 test 容器保存为镜像")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("停止容器")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" lxc stop "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("保存为镜像")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" lxc publish "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" --alias standardr --public\n")])])])])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);